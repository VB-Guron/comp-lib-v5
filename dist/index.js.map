{"version":3,"sources":["../src/index.ts","../src/components/ui/button.tsx","../src/lib/utils.ts","../src/components/ui/combobox.tsx","../src/components/ui/command.tsx","../src/components/ui/dialog.tsx","../src/components/ui/popover.tsx","../src/components/ui/checkboxgroup.tsx","../src/components/ui/input.tsx","../src/components/ui/label.tsx","../src/components/ui/textarea.tsx","../src/components/ui/toggle.tsx","../src/components/ui/form.tsx","../src/components/upgraded/dropdown-form.tsx","../src/components/upgraded/fieldset-form-input.tsx","../src/components/upgraded/fieldset-form-textarea.tsx","../src/components/upgraded/toggle-form.tsx","../src/components/theme-provider.tsx","../src/components/ui/mode-toggle.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/common/Modal/modal.tsx"],"sourcesContent":["\"use client\";\n// Tailwind/CSS components\nexport { Button, buttonVariants } from \"./components/ui/button\";\nexport { Combobox, comboboxColorVariants } from \"./components/ui/combobox\";\nexport { GenericCheckboxGroup } from \"./components/ui/checkboxgroup\";\nexport { Command, CommandGroup, CommandItem, CommandList } from \"./components/ui/command\";\nexport { Dialog, DialogContent, DialogTrigger } from \"./components/ui/dialog\";\nexport { Input } from \"./components/ui/input\";\nexport { Label } from \"./components/ui/label\";\nexport { Popover, PopoverContent, PopoverTrigger } from \"./components/ui/popover\";\nexport { Textarea } from \"./components/ui/textarea\";\nexport { Toggle, toggleColorVariants } from \"./components/ui/toggle\";\n\nexport {\n  Form,\n  FormField,\n  FormItem,\n  FormControl,\n  FormMessage,\n} from \"./components/ui/form\";\n\n// Upgraded form components\nexport { DropdownForm } from \"./components/upgraded/dropdown-form\";\nexport { UpgradedFieldsetFormInput } from \"./components/upgraded/fieldset-form-input\";\nexport { UpgradedFieldsetFormTextarea } from \"./components/upgraded/fieldset-form-textarea\";\nexport { ToggleForm } from \"./components/upgraded/toggle-form\";\n\n\n// Theme components\nexport { ThemeProvider } from \"./components/theme-provider\";\nexport { ModeToggle } from \"./components/ui/mode-toggle\";\n\n// SCSS components (ui)\n//export { Modal } from \"./components/ui/modal\";\n//export { Dropdown, DropdownItem } from \"./components/ui/dropdown\";\n\n// SCSS components (common)\nexport { default as Modal } from \"./components/common/Modal/modal\";\n\n\n// Utilities\nexport { cn } from \"./lib/utils\";\n\n// Types\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"cursor-pointer inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: `bg-primary text-primary-foreground hover:bg-primary/90`,\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-border bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground \",\n        link: \"text-background-foreground underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-6 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n        noPadding: \"h-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport { Check, ChevronsUpDown } from \"lucide-react\";\n\nimport { cn } from \"../../lib/utils\";\nimport { Button } from \"./button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"./command\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"./popover\";\n\n// Option type\nexport type ComboboxOption = { value: string; label: string };\n\n// Fieldset color variants (reuse from input/textarea)\nexport const comboboxColorVariants = {\n  default: {\n    fieldset: \"border-input bg-transparent\",\n    legend: \"text-input\",\n  },\n  primary: {\n    fieldset: \"border-primary bg-primary/10 dark:border-yello-700\",\n    legend: \"text-primary\",\n  },\n  secondary: {\n    fieldset: \"border-secondary bg-secondary/10\",\n    legend: \"text-secondary\",\n  },\n  success: {\n    fieldset: \"border-green-500 bg-green-50\",\n    legend: \"text-green-700\",\n  },\n  danger: {\n    fieldset: \"border-destructive bg-destructive/10\",\n    legend: \"text-destructive\",\n  },\n};\n\nexport interface ComboboxProps {\n  options?: ComboboxOption[];\n  value: string;\n  onChange: (value: string) => void;\n  searchUrl?: string;\n  placeholder?: string;\n  label?: string;\n  variant?: \"fieldset\";\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n  dropdownProps?: React.HTMLAttributes<HTMLDivElement>;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n}\n\nexport const Combobox: React.FC<ComboboxProps> = ({\n  options: optionsProp = [],\n  value,\n  onChange,\n  searchUrl,\n  placeholder = \"Select...\",\n  label,\n  variant = \"fieldset\",\n  fieldsetColorVariant = \"default\",\n  dropdownProps,\n  inputProps,\n}) => {\n  // Defensive: never allow inputProps.value to override our internal search state\n  const { value: _ignoreValue, ...safeInputProps } = inputProps || {};\n  const [open, setOpen] = React.useState(false);\n  const [search, setSearch] = React.useState<string>(\"\");\n  const [options, setOptions] = React.useState<ComboboxOption[]>(optionsProp);\n  const [loading, setLoading] = React.useState(false);\n  const colorSet =\n    comboboxColorVariants[fieldsetColorVariant] ||\n    comboboxColorVariants.default;\n  const fieldsetRef = React.useRef<HTMLFieldSetElement>(null);\n  const [dropdownWidth, setDropdownWidth] = React.useState<string | undefined>(\n    undefined\n  );\n\n  // Async search effect\n  React.useEffect(() => {\n    if (!searchUrl) return;\n    if (!search) {\n      setOptions([]);\n      return;\n    }\n    setLoading(true);\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    if (searchUrl === \"https://api.example.com/search\") {\n      // Simulate async API with static data and network delay, returning { items: Option[] }\n      const allOptions = [\n        { value: \"apple\", label: \"Apple\" },\n        { value: \"banana\", label: \"Banana\" },\n        { value: \"orange\", label: \"Orange\" },\n      ];\n      timeout = setTimeout(() => {\n        setOptions(\n          allOptions.filter((o) =>\n            o.label.toLowerCase().includes(search.toLowerCase())\n          )\n        );\n        setLoading(false);\n      }, 700);\n    } else {\n      // Real API fetch\n      fetch(`${searchUrl}?q=${encodeURIComponent(search)}`)\n        .then((res) => res.json())\n        .then((data) => {\n          setOptions(data.items || []);\n          setLoading(false);\n        })\n        .catch(() => setLoading(false));\n    }\n    return () => {\n      setLoading(false);\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [search, searchUrl]);\n\n  // Local search effect (if no searchUrl)\n  React.useEffect(() => {\n    if (searchUrl) return;\n    if (!search) {\n      setOptions(optionsProp);\n      return;\n    }\n    setOptions(\n      optionsProp.filter((o) =>\n        o.label.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, optionsProp, searchUrl]);\n\n  // Set dropdown width to match fieldset\n  React.useLayoutEffect(() => {\n    if (fieldsetRef.current) {\n      setDropdownWidth(`${fieldsetRef.current.offsetWidth}px`);\n    }\n  }, [open]);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <fieldset\n          ref={fieldsetRef}\n          className={cn(\n            \"cursor-pointer rounded-sm p-0 px-2 pb-1\",\n            \"border\",\n            colorSet.fieldset\n          )}\n        >\n          {label && (\n            <legend\n              className={cn(\n                \"my-0 bg-transparent p-0 text-xs leading-none font-medium\",\n                colorSet.legend\n              )}\n            >\n              {label}\n            </legend>\n          )}\n          <div className=\"flex w-full items-center justify-between bg-transparent px-2 py-1\">\n            <span>\n              {value\n                ? optionsProp.find((o) => o.value === value)?.label || value\n                : placeholder}\n            </span>\n            <ChevronsUpDown className=\"opacity-50\" size={15} />\n          </div>\n        </fieldset>\n      </PopoverTrigger>\n      <PopoverContent\n        align=\"start\"\n        sideOffset={0}\n        className=\"border-input min-w-0 rounded-b-md border p-0 shadow\"\n        style={{\n          minWidth: 0,\n          width: dropdownWidth,\n          left: 0,\n          right: \"auto\",\n          position: \"absolute\",\n          zIndex: 50,\n        }}\n        {...dropdownProps}\n      >\n        <Command className=\"bg-background m-0 w-full border-0 p-0\">\n          <CommandInput\n            placeholder={placeholder}\n            className=\"h-9 border-transparent bg-transparent\"\n            value={search}\n            onValueChange={setSearch}\n            {...safeInputProps}\n          />\n          <CommandList>\n            {loading ? (\n              <div className=\"py-6 text-center text-sm\">Loading...</div>\n            ) : options.length === 0 ? (\n              <CommandEmpty>No results found.</CommandEmpty>\n            ) : (\n              <CommandGroup>\n                {options.map((option) => (\n                  <CommandItem\n                    key={option.value}\n                    value={option.value}\n                    onSelect={() => {\n                      onChange(option.value);\n                      setOpen(false);\n                    }}\n                    className={cn(\n                      value === option.value && \"bg-primary/10 text-primary\"\n                    )}\n                  >\n                    {option.label}\n                    {value === option.value && (\n                      <Check className=\"ml-auto opacity-100\" />\n                    )}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n","\"use client\";\n\nimport * as React from \"react\";\nimport { Command as CommandPrimitive } from \"cmdk\";\nimport { SearchIcon } from \"lucide-react\";\n\nimport { cn } from \"../../lib/utils\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"./dialog\";\n\nfunction Command({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive>) {\n  return (\n    <CommandPrimitive\n      data-slot=\"command\"\n      className={cn(\n        \"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CommandDialog({\n  title = \"Command Palette\",\n  description = \"Search for a command to run...\",\n  children,\n  className,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof Dialog> & {\n  title?: string;\n  description?: string;\n  className?: string;\n  showCloseButton?: boolean;\n}) {\n  return (\n    <Dialog {...props}>\n      <DialogHeader className=\"sr-only\">\n        <DialogTitle>{title}</DialogTitle>\n        <DialogDescription>{description}</DialogDescription>\n      </DialogHeader>\n      <DialogContent\n        className={cn(\"overflow-hidden p-0\", className)}\n        showCloseButton={showCloseButton}\n      >\n        <Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction CommandInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Input>) {\n  return (\n    <div\n      data-slot=\"command-input-wrapper\"\n      className=\"flex h-9 items-center gap-2 border-b px-3\"\n    >\n      <SearchIcon className=\"size-4 shrink-0 opacity-50\" />\n      <CommandPrimitive.Input\n        data-slot=\"command-input\"\n        className={cn(\n          \"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction CommandList({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.List>) {\n  return (\n    <CommandPrimitive.List\n      data-slot=\"command-list\"\n      className={cn(\n        \"max-h-[200px] scroll-py-1 overflow-x-hidden overflow-y-auto\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CommandEmpty({\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\n  return (\n    <CommandPrimitive.Empty\n      data-slot=\"command-empty\"\n      className=\"py-6 text-center text-sm\"\n      {...props}\n    />\n  );\n}\n\nfunction CommandGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Group>) {\n  return (\n    <CommandPrimitive.Group\n      data-slot=\"command-group\"\n      className={cn(\n        \"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CommandSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\n  return (\n    <CommandPrimitive.Separator\n      data-slot=\"command-separator\"\n      className={cn(\"bg-border -mx-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CommandItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Item>) {\n  return (\n    <CommandPrimitive.Item\n      data-slot=\"command-item\"\n      className={cn(\n        \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CommandShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"command-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n};\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean;\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n","\"use client\";\n\nimport { useCallback, useState } from \"react\";\nimport { cn } from \"../../lib/utils\";\n\n// Generic type for any selectable item\nexport interface SelectableItem {\n  id: string | number;\n  code: string;\n  name: string;\n  permissionGroupId?: string;\n}\n\n// Generic component props - all optional with defaults\nexport interface GenericCheckboxGroupProps<T extends SelectableItem> {\n  data?: T[];\n  OnFormChange?: (e: any) => void;\n  name?: string;\n  value?: any[];\n  valueName?: string;\n  title?: string; // Generic title for the select all button\n}\n\n// Default mock data - can represent anything (holidays, permissions, categories, etc.)\nconst DEFAULT_ITEMS: SelectableItem[] = [\n  { id: 1, code: \"ITEM1\", name: \"First Item\", permissionGroupId: \"group-a\" },\n  { id: 2, code: \"ITEM2\", name: \"Second Item\", permissionGroupId: \"group-a\" },\n  { id: 3, code: \"ITEM3\", name: \"Third Item\", permissionGroupId: \"group-b\" },\n  { id: 4, code: \"ITEM4\", name: \"Fourth Item\", permissionGroupId: \"group-b\" },\n  { id: 5, code: \"ITEM5\", name: \"Fifth Item\", permissionGroupId: \"group-c\" },\n  { id: 6, code: \"ITEM6\", name: \"Sixth Item\", permissionGroupId: \"group-c\" },\n  { id: 7, code: \"ITEM7\", name: \"Seventh Item\", permissionGroupId: \"group-d\" },\n  { id: 8, code: \"ITEM8\", name: \"Eighth Item\", permissionGroupId: \"group-d\" },\n];\n\n// Generic checkbox group component\nexport const GenericCheckboxGroup = <T extends SelectableItem>({\n  data = DEFAULT_ITEMS as T[],\n  name = \"items\",\n  value = [],\n  valueName = \"itemId\",\n  title = \"Select All\",\n  OnFormChange = (e) => console.log(\"Form change:\", e),\n}: GenericCheckboxGroupProps<T>) => {\n  // Track selected items using Set for better performance\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(\n    new Set(value.map((item: any) => item[valueName]?.toString()))\n  );\n\n  // Check if all items are selected\n  const isAllSelected = selectedItems.size === data.length && data.length > 0;\n  // Check if some (but not all) items are selected\n  const isIndeterminate =\n    selectedItems.size > 0 && selectedItems.size < data.length;\n\n  // Handle select all / deselect all functionality\n  const handleSelectAll = useCallback(() => {\n    if (isAllSelected) {\n      // Clear all selections\n      setSelectedItems(new Set());\n      OnFormChange({ target: { name, value: data, action: \"removeAll\" } });\n    } else {\n      // Select all items\n      const allIds = new Set(data.map((item) => item.id.toString()));\n      setSelectedItems(allIds);\n      OnFormChange({ target: { name, value: data, action: \"addAll\" } });\n    }\n  }, [isAllSelected, data, name, OnFormChange]);\n\n  // Handle individual item selection toggle\n  const handleItemToggle = useCallback(\n    (item: T, isSelected: boolean) => {\n      const itemId = item.id.toString();\n      const newSelectedItems = new Set(selectedItems);\n\n      if (isSelected) {\n        // Remove item from selection\n        newSelectedItems.delete(itemId);\n        OnFormChange({\n          target: {\n            name,\n            value: {\n              [valueName]: item.id,\n              permissionGroupId: item.permissionGroupId,\n            },\n            action: \"sub\",\n          },\n        });\n      } else {\n        // Add item to selection\n        newSelectedItems.add(itemId);\n        OnFormChange({\n          target: {\n            name,\n            value: {\n              [valueName]: item.id,\n              permissionGroupId: item.permissionGroupId,\n            },\n            action: \"add\",\n          },\n        });\n      }\n\n      setSelectedItems(newSelectedItems);\n    },\n    [selectedItems, name, valueName, OnFormChange]\n  );\n\n  return (\n    // Main container - responsive layout: column on mobile, row on xl screens\n    <div className=\"flex flex-col gap-4 xl:flex-row\">\n      {/* Left side - Select All button */}\n      <div className=\"flex flex-col gap-2\">\n        <SelectAllCheckbox\n          isChecked={isAllSelected}\n          isIndeterminate={isIndeterminate}\n          onToggle={handleSelectAll}\n          label={title}\n        />\n      </div>\n\n      {/* Right side - Individual items with divider border */}\n      <div className=\"xl:border-l-3 border-t-3 border-primary pt-5 xl:border-t-0 xl:border-primary xl:pl-5 xl:pt-0\">\n        {/* Items container - max width 560px, max height 270px with scroll */}\n        <div className=\"flex max-h-[270px] max-w-[560px] flex-wrap gap-2 overflow-y-auto p-2\">\n          {data.map((item) => (\n            <CheckboxItem\n              key={item.id}\n              item={item}\n              isSelected={selectedItems.has(item.id.toString())}\n              onToggle={handleItemToggle}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Props for Select All checkbox component\ninterface SelectAllCheckboxProps {\n  isChecked: boolean;\n  isIndeterminate: boolean;\n  onToggle: () => void;\n  label: string;\n}\n\nconst SelectAllCheckbox = ({\n  isChecked,\n  isIndeterminate,\n  onToggle,\n  label,\n}: SelectAllCheckboxProps) => {\n  return (\n    // Select All button - 128px x 80px with top margin\n    <div\n      onClick={onToggle}\n      className={cn(\n        \"mt-2 flex h-20 w-32 cursor-pointer flex-col items-center justify-center rounded border transition-colors\",\n        // Background and text colors based on selection state\n        isChecked || isIndeterminate\n          ? \"border-primary bg-primary text-primary-foreground\" // Selected: primary background\n          : \"hover:bg-primary/5 border-primary bg-background text-primary\" // Unselected: light background with hover\n      )}\n    >\n      {/* Text container */}\n      <div className=\"px-2 text-center\">\n        {/* Label text - 14px font medium weight */}\n        <span className=\"text-sm font-medium\">{label}</span>\n      </div>\n      {/* Checkbox visual indicator */}\n      <div className=\"relative mt-1\">\n        {/* Hidden actual checkbox for accessibility */}\n        <input\n          type=\"checkbox\"\n          checked={isChecked}\n          ref={(el) => {\n            if (el) el.indeterminate = isIndeterminate;\n          }}\n          onChange={() => {}} // Controlled by parent\n          className=\"sr-only\" // Screen reader only\n        />\n        {/* Custom checkbox visual - 12px square with 2px border */}\n        <div\n          className={cn(\n            \"flex h-3 w-3 items-center justify-center rounded border-2\",\n            isChecked || isIndeterminate\n              ? \"border-primary-foreground bg-primary\" // Selected: primary background\n              : \"border-primary\" // Unselected: primary border only\n          )}\n        >\n          {/* Checkmark icon when fully selected */}\n          {isChecked && (\n            <svg\n              className=\"h-2 w-2 text-primary-foreground\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          )}\n          {/* Dash icon when partially selected (indeterminate) */}\n          {isIndeterminate && !isChecked && (\n            <div className=\"h-0.5 w-1.5 rounded bg-primary-foreground\" />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Props for individual checkbox item\ninterface CheckboxItemProps<T extends SelectableItem> {\n  item: T;\n  isSelected: boolean;\n  onToggle: (item: T, isSelected: boolean) => void;\n}\n\nconst CheckboxItem = <T extends SelectableItem>({\n  item,\n  isSelected,\n  onToggle,\n}: CheckboxItemProps<T>) => {\n  return (\n    // Individual item box - 128px x 80px\n    <div\n      onClick={() => onToggle(item, isSelected)}\n      className={cn(\n        \"flex h-20 w-32 cursor-pointer flex-col items-center justify-center rounded border transition-colors\",\n        // Background and text colors based on selection\n        isSelected\n          ? \"border-primary bg-primary text-primary-foreground\" // Selected: primary background\n          : \"hover:bg-primary/5 border-primary bg-background text-primary\" // Unselected: light background with hover\n      )}\n    >\n      {/* Text content area */}\n      <div className=\"flex flex-1 flex-col justify-center px-2 text-center\">\n        {/* Item code - 14px font medium weight with bottom margin */}\n        <span className=\"mb-1 text-sm font-medium leading-tight\">\n          {item.code}\n        </span>\n        {/* Item full name - 12px font normal weight */}\n        <span className=\"text-xs leading-tight\">{item.name}</span>\n      </div>\n      {/* Checkbox at bottom */}\n      <div className=\"relative mb-1\">\n        {/* Hidden actual checkbox for accessibility */}\n        <input\n          type=\"checkbox\"\n          checked={isSelected}\n          onChange={() => {}} // Controlled by parent\n          className=\"sr-only\" // Screen reader only\n        />\n        {/* Custom checkbox visual - 12px square with 2px border */}\n        <div\n          className={cn(\n            \"flex h-3 w-3 items-center justify-center rounded border-2\",\n            isSelected\n              ? \"border-primary-foreground bg-primary\" // Selected: primary background\n              : \"border-primary\" // Unselected: primary border only\n          )}\n        >\n          {/* Checkmark icon when selected */}\n          {isSelected && (\n            <svg\n              className=\"h-2 w-2 text-primary-foreground\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Legacy holiday-specific wrapper for backward compatibility\nexport interface HolidayItem extends SelectableItem {}\n\nexport interface HandleCheckBoxTypes\n  extends GenericCheckboxGroupProps<HolidayItem> {}\n\nexport const HandleCheckBoxHolidays = (props: HandleCheckBoxTypes) => {\n  return (\n    <GenericCheckboxGroup {...props} title={props.title || \"Select All\"} />\n  );\n};\n\n\n\n// Demo component to showcase functionality\nexport const GenericCheckboxDemo = () => {\n  // State to track selected items\n  const [selectedItems, setSelectedItems] = useState<any[]>([]);\n  const [selectedHolidays, setSelectedHolidays] = useState<any[]>([]);\n  const [selectedPermissions, setSelectedPermissions] = useState<any[]>([]);\n\n  // Handle form changes for generic items\n  const handleGenericChange = (e: any) => {\n    const { action, value } = e.target;\n    console.log(\"Generic change:\", e.target);\n\n    setSelectedItems((prev) => {\n      switch (action) {\n        case \"addAll\": // Select all items\n          return value.map((item: SelectableItem) => ({\n            itemId: item.id,\n            permissionGroupId: item.permissionGroupId,\n          }));\n        case \"removeAll\": // Clear all selections\n          return [];\n        case \"add\": // Add single item\n          return [\n            ...prev.filter((item) => item.itemId !== value.itemId),\n            value,\n          ];\n        case \"sub\": // Remove single item\n          return prev.filter((item) => item.itemId !== value.itemId);\n        default:\n          return prev;\n      }\n    });\n  };\n\n  // Handle form changes for holidays\n  const handleHolidayChange = (e: any) => {\n    const { action, value } = e.target;\n    console.log(\"Holiday change:\", e.target);\n\n    setSelectedHolidays((prev) => {\n      switch (action) {\n        case \"addAll\":\n          return value.map((item: SelectableItem) => ({\n            holidayGroupId: item.id,\n            permissionGroupId: item.permissionGroupId,\n          }));\n        case \"removeAll\":\n          return [];\n        case \"add\":\n          return [\n            ...prev.filter(\n              (item) => item.holidayGroupId !== value.holidayGroupId\n            ),\n            value,\n          ];\n        case \"sub\":\n          return prev.filter(\n            (item) => item.holidayGroupId !== value.holidayGroupId\n          );\n        default:\n          return prev;\n      }\n    });\n  };\n\n  // Handle form changes for permissions\n  const handlePermissionChange = (e: any) => {\n    const { action, value } = e.target;\n    console.log(\"Permission change:\", e.target);\n\n    setSelectedPermissions((prev) => {\n      switch (action) {\n        case \"addAll\":\n          return value.map((item: SelectableItem) => ({\n            permissionId: item.id,\n            permissionGroupId: item.permissionGroupId,\n          }));\n        case \"removeAll\":\n          return [];\n        case \"add\":\n          return [\n            ...prev.filter((item) => item.permissionId !== value.permissionId),\n            value,\n          ];\n        case \"sub\":\n          return prev.filter(\n            (item) => item.permissionId !== value.permissionId\n          );\n        default:\n          return prev;\n      }\n    });\n  };\n\n  return (\n    <div className=\"mx-auto max-w-4xl space-y-8 p-6\">\n      {/* Generic Items Example */}\n      <div>\n        <h2 className=\"mb-2 text-2xl font-bold\">Generic Checkbox Group Demo</h2>\n        <p className=\"mb-4 text-gray-600\">\n          Works with any data that has id, code, name, and permissionGroupId\n        </p>\n\n        <GenericCheckboxGroup\n          value={selectedItems}\n          OnFormChange={handleGenericChange}\n          title=\"Select All Items\"\n          name=\"genericItems\"\n          valueName=\"itemId\"\n        />\n\n        {/* Selected items display */}\n        <div className=\"mt-4 rounded-lg bg-gray-50 p-4\">\n          <h3 className=\"mb-2 font-semibold\">\n            Selected Items ({selectedItems.length}):\n          </h3>\n          {selectedItems.length === 0 ? (\n            <p className=\"italic text-gray-500\">No items selected</p>\n          ) : (\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedItems.map((item, index) => (\n                <span\n                  key={index}\n                  className=\"bg-primary/10 rounded-full px-3 py-1 text-sm text-primary\"\n                >\n                  ID: {item.itemId}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Holiday Example (backward compatibility) */}\n      <div>\n        <h2 className=\"mb-2 text-2xl font-bold\">\n          Holiday Example (Legacy Compatibility)\n        </h2>\n        <p className=\"mb-4 text-gray-600\">\n          Same component, different data and labels\n        </p>\n\n        <HandleCheckBoxHolidays\n          data={[\n            {\n              id: 1,\n              code: \"NY\",\n              name: \"New Year's Day\",\n              permissionGroupId: \"federal\",\n            },\n            {\n              id: 2,\n              code: \"JULY4\",\n              name: \"Independence Day\",\n              permissionGroupId: \"federal\",\n            },\n            {\n              id: 3,\n              code: \"XMAS\",\n              name: \"Christmas Day\",\n              permissionGroupId: \"federal\",\n            },\n            {\n              id: 4,\n              code: \"EASTER\",\n              name: \"Easter\",\n              permissionGroupId: \"religious\",\n            },\n          ]}\n          value={selectedHolidays}\n          OnFormChange={handleHolidayChange}\n          title=\"Select Holidays\"\n          name=\"holidays\"\n          valueName=\"holidayGroupId\"\n        />\n\n        {/* Selected holidays display */}\n        <div className=\"mt-4 rounded-lg bg-gray-50 p-4\">\n          <h3 className=\"mb-2 font-semibold\">\n            Selected Holidays ({selectedHolidays.length}):\n          </h3>\n          {selectedHolidays.length === 0 ? (\n            <p className=\"italic text-gray-500\">No holidays selected</p>\n          ) : (\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedHolidays.map((holiday, index) => (\n                <span\n                  key={index}\n                  className=\"rounded-full bg-blue-100 px-3 py-1 text-sm text-blue-800\"\n                >\n                  Holiday ID: {holiday.holidayGroupId}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Permissions Example */}\n      <div>\n        <h2 className=\"mb-2 text-2xl font-bold\">User Permissions Example</h2>\n        <p className=\"mb-4 text-gray-600\">\n          Using the same component for user permissions\n        </p>\n\n        <GenericCheckboxGroup\n          data={[\n            {\n              id: 1,\n              code: \"READ\",\n              name: \"Read Access\",\n              permissionGroupId: \"basic\",\n            },\n            {\n              id: 2,\n              code: \"WRITE\",\n              name: \"Write Access\",\n              permissionGroupId: \"basic\",\n            },\n            {\n              id: 3,\n              code: \"ADMIN\",\n              name: \"Admin Access\",\n              permissionGroupId: \"advanced\",\n            },\n            {\n              id: 4,\n              code: \"DELETE\",\n              name: \"Delete Access\",\n              permissionGroupId: \"advanced\",\n            },\n          ]}\n          value={selectedPermissions}\n          OnFormChange={handlePermissionChange}\n          title=\"Select Permissions\"\n          name=\"permissions\"\n          valueName=\"permissionId\"\n        />\n\n        {/* Selected permissions display */}\n        <div className=\"mt-4 rounded-lg bg-gray-50 p-4\">\n          <h3 className=\"mb-2 font-semibold\">\n            Selected Permissions ({selectedPermissions.length}):\n          </h3>\n          {selectedPermissions.length === 0 ? (\n            <p className=\"italic text-gray-500\">No permissions selected</p>\n          ) : (\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedPermissions.map((permission, index) => (\n                <span\n                  key={index}\n                  className=\"rounded-full bg-green-100 px-3 py-1 text-sm text-green-800\"\n                >\n                  Permission ID: {permission.permissionId}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Export the generic component as default\n//export default GenericCheckboxDemo;\nexport default GenericCheckboxGroup;\n","\"use client\";\nimport * as React from \"react\";\nimport type { CSSProperties } from \"react\";\nimport { cva } from \"class-variance-authority\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\nimport moment from \"moment\";\n\nconst inputVariants = cva(\n  // Default variant matches the original input style\n  \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"\", // original style\n        filled:\n          \"bg-muted border-0 shadow-inner focus-visible:ring-2 focus-visible:ring-ring/40\", // new filled style\n        underline: \"border-0 border-b-2 rounded-none focus-visible:border-ring\",\n        ghost: \"border-0 bg-transparent shadow-none\",\n        fieldset: \"\", // fieldset handled in render, not class\n      },\n      inputSize: {\n        default: \"h-9 px-3 py-1 text-base md:text-sm\",\n        sm: \"h-8 px-2 text-sm\",\n        lg: \"h-11 px-4 text-lg\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      inputSize: \"default\",\n    },\n  }\n);\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    VariantProps<typeof inputVariants> {\n  /** For fieldset variant: format value as number with 2 decimals */\n  formatNumber?: boolean;\n  /** For fieldset variant: legend/label text */\n  legend?: string;\n  /** Fieldset color variant: default, primary, secondary, success, danger */\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n}\n\nfunction formatFieldsetValue({\n  type,\n  value,\n  formatNumber,\n}: {\n  type?: string;\n  value: any;\n  formatNumber?: boolean;\n}) {\n  if (type?.toLowerCase() === \"month\" && value != undefined) {\n    return `${value.toString().substring(0, 4)}-${value.toString().substring(4)}`;\n  }\n  if (type?.toLowerCase() === \"date\") {\n    if (value === \"\" || value === null || value === undefined) return \"\";\n    if (typeof value === \"string\") {\n      return moment(value.includes(\"T\") ? value.split(\"T\")[0] : value).format(\n        \"YYYY-MM-DD\"\n      );\n    }\n    return value;\n  }\n  if (formatNumber && value != null && !isNaN(Number(value))) {\n    return Number(value).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  }\n  return value;\n}\n\n// Fieldset color variants using Tailwind color classes\nconst fieldsetColorVariants = {\n  default: {\n    fieldset: \"border-input\",\n    legend: \"text-input\",\n    input: \"text-foreground\",\n  },\n  primary: {\n    fieldset: \"border-primary bg-primary/10 dark:border-yello-700\",\n    legend: \"text-primary\",\n    input: \"text-primary\",\n  },\n  secondary: {\n    fieldset: \"border-secondary bg-secondary/10\",\n    legend: \"text-secondary\",\n    input: \"text-secondary\",\n  },\n  success: {\n    fieldset: \"border-green-500 bg-green-50\",\n    legend: \"text-green-700\",\n    input: \"text-green-700\",\n  },\n  danger: {\n    fieldset: \"border-destructive bg-destructive/10\",\n    legend: \"text-destructive\",\n    input: \"text-destructive\",\n  },\n};\n\nfunction renderFieldsetInput({\n  className,\n  type,\n  legend,\n  placeholder,\n  value,\n  inputRef,\n  fieldsetColorVariant = \"default\",\n  disabled,\n  ...props\n}: {\n  className?: string;\n  type?: string;\n  legend?: string;\n  placeholder?: string;\n  value?: any;\n  inputRef?: React.Ref<HTMLInputElement>;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n  disabled?: boolean;\n  [key: string]: any;\n}) {\n  const colorSet =\n    fieldsetColorVariants[fieldsetColorVariant] ||\n    fieldsetColorVariants.default;\n  return (\n    <fieldset\n      className={cn(\n        \"rounded-sm p-0 px-2 pb-1\",\n        disabled ? \"border-none\" : \"border\",\n        !disabled && colorSet.fieldset,\n        className\n      )}\n      input-type={type || \"text\"}\n    >\n      <legend\n        className={cn(\n          \"my-0 bg-transparent p-0 text-xs leading-none font-medium\",\n          colorSet.legend\n        )}\n      >\n        {legend || placeholder}\n      </legend>\n      <input\n        type={type || \"text\"}\n        className={cn(\n          \"w-full rounded-none text-base placeholder-transparent outline-none disabled:bg-transparent\",\n          colorSet.input\n        )}\n        style={{\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        }}\n        ref={inputRef}\n        value={value}\n        disabled={disabled}\n        {...props}\n      />\n    </fieldset>\n  );\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      variant,\n      inputSize,\n      formatNumber,\n      legend,\n      placeholder,\n      value,\n      ...props\n    },\n    ref\n  ) => {\n    if (variant === \"fieldset\") {\n      const displayValue = formatFieldsetValue({ type, value, formatNumber });\n      return renderFieldsetInput({\n        className,\n        type,\n        legend,\n        placeholder,\n        value: displayValue,\n        inputRef: ref,\n        fieldsetColorVariant: props.fieldsetColorVariant,\n        ...props,\n      });\n    }\n    // Default rendering for other variants\n    return (\n      <input\n        type={type}\n        data-slot=\"input\"\n        className={cn(inputVariants({ variant, inputSize }), className)}\n        ref={ref}\n        value={value}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input, inputVariants };\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Label };\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"../../lib/utils\";\nimport moment from \"moment\";\n\nconst textareaVariants = cva(\n  \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-20 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm resize-none\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        filled:\n          \"bg-muted border-0 shadow-inner focus-visible:ring-2 focus-visible:ring-ring/40\",\n        underline: \"border-0 border-b-2 rounded-none focus-visible:border-ring\",\n        ghost: \"border-0 bg-transparent shadow-none\",\n        fieldset: \"\", // handled in render\n      },\n      textareaSize: {\n        default: \"min-h-16 px-3 py-2 text-base md:text-sm\",\n        sm: \"min-h-12 px-2 text-sm\",\n        lg: \"min-h-24 px-4 text-lg\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      textareaSize: \"default\",\n    },\n  }\n);\n\n// Fieldset color variants using Tailwind color classes (copied from input)\nconst fieldsetColorVariants = {\n  default: {\n    fieldset: \"border-input\",\n    legend: \"text-input\",\n    input: \"text-foreground\",\n  },\n  primary: {\n    fieldset: \"border-primary bg-primary/10\",\n    legend: \"text-primary\",\n    input: \"text-primary\",\n  },\n  secondary: {\n    fieldset: \"border-secondary bg-secondary/10\",\n    legend: \"text-secondary\",\n    input: \"text-secondary\",\n  },\n  success: {\n    fieldset: \"border-green-500 bg-green-50\",\n    legend: \"text-green-700\",\n    input: \"text-green-700\",\n  },\n  danger: {\n    fieldset: \"border-destructive bg-destructive/10\",\n    legend: \"text-destructive\",\n    input: \"text-destructive\",\n  },\n};\n\nfunction renderFieldsetTextarea({\n  className,\n  legend,\n  placeholder,\n  value,\n  inputRef,\n  fieldsetColorVariant = \"default\",\n  disabled,\n  ...props\n}: {\n  className?: string;\n  legend?: string;\n  placeholder?: string;\n  value?: any;\n  inputRef?: React.Ref<HTMLTextAreaElement>;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n  disabled?: boolean;\n  [key: string]: any;\n}) {\n  const colorSet =\n    fieldsetColorVariants[fieldsetColorVariant] ||\n    fieldsetColorVariants.default;\n  return (\n    <fieldset\n      className={cn(\n        \"rounded-sm p-0 px-2 pb-1\",\n        disabled ? \"border-none\" : \"border\",\n        !disabled && colorSet.fieldset,\n        className\n      )}\n    >\n      <legend\n        className={cn(\n          \"text-input my-0 bg-transparent p-0 text-xs leading-none font-medium\",\n          colorSet.legend\n        )}\n      >\n        {legend || placeholder}\n      </legend>\n      <textarea\n        className={cn(\n          \"w-full rounded-none text-base placeholder-transparent outline-none disabled:bg-transparent\",\n          colorSet.input,\n          disabled && \"resize-none\"\n        )}\n        style={{ resize: \"none\", ...(props.style || {}) }}\n        ref={inputRef}\n        value={value}\n        disabled={disabled}\n        {...props}\n      />\n    </fieldset>\n  );\n}\n\nexport interface TextareaProps\n  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, \"size\">,\n    VariantProps<typeof textareaVariants> {\n  legend?: string;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      className,\n      variant,\n      textareaSize,\n      legend,\n      fieldsetColorVariant,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    if (variant === \"fieldset\") {\n      return renderFieldsetTextarea({\n        className,\n        legend,\n        placeholder: props.placeholder,\n        value: props.value,\n        inputRef: ref,\n        fieldsetColorVariant,\n        disabled,\n        ...props,\n      });\n    }\n    return (\n      <textarea\n        data-slot=\"textarea\"\n        className={cn(textareaVariants({ variant, textareaSize }), className)}\n        style={{ resize: \"none\", ...(props.style || {}) }}\n        ref={ref}\n        disabled={disabled}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea, textareaVariants };\n","\"use client\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport type ToggleChangedProps = {\n  target: { value: boolean; name: string };\n};\n\nexport type ToggleProps = {\n  onChange?: (checked: ToggleChangedProps) => void;\n  checked?: boolean;\n  disabled?: boolean;\n  name?: string;\n  checkedValue?: string;\n  notCheckedValue?: string;\n  legend?: string; // label above the toggle, like fieldset\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n};\n\nexport const toggleColorVariants = {\n  default: {\n    fieldset: \"border-input\",\n    legend: \"text-input\",\n  },\n  primary: {\n    fieldset: \"border-primary bg-primary/10\",\n    legend: \"text-primary\",\n  },\n  secondary: {\n    fieldset: \"border-secondary bg-secondary/10\",\n    legend: \"text-secondary\",\n  },\n  success: {\n    fieldset: \"border-green-500 bg-green-50\",\n    legend: \"text-green-700\",\n  },\n  danger: {\n    fieldset: \"border-destructive bg-destructive/10\",\n    legend: \"text-destructive\",\n  },\n};\n\nexport const Toggle = (props: ToggleProps) => {\n  const {\n    checked = false,\n    onChange = () => {},\n    disabled = false,\n    name = \"\",\n    checkedValue = \"YES\",\n    notCheckedValue = \"NO\",\n    legend,\n    fieldsetColorVariant = \"default\",\n  } = props;\n\n  const toggleRef = useRef(false);\n  const [isChecked, setIsChecked] = useState(checked);\n\n  useEffect(() => {\n    toggleRef.current = checked;\n    setIsChecked(checked);\n  }, [checked]);\n\n  const toggleYes = useCallback(() => {\n    if (disabled) return;\n    toggleRef.current = true;\n    setIsChecked(true);\n    onChange({ target: { name, value: true } });\n  }, [onChange, name, disabled]);\n\n  const toggleNo = useCallback(() => {\n    if (disabled) return;\n    toggleRef.current = false;\n    setIsChecked(false);\n    onChange({ target: { name, value: false } });\n  }, [onChange, name, disabled]);\n\n  const colorSet =\n    toggleColorVariants[fieldsetColorVariant] ||\n    toggleColorVariants.default;\n  if (disabled) {\n    return (\n      <div className=\"flex flex-col gap-1\">\n        {legend && (\n          <span\n            className={`mb-1 block text-xs leading-none font-medium ${colorSet.legend}`}\n          >\n            {legend}\n          </span>\n        )}\n        <span className=\"text-foreground block text-xs font-semibold\">\n          {isChecked ? checkedValue : notCheckedValue}\n        </span>\n      </div>\n    );\n  }\n  return (\n    <div className=\"flex flex-col gap-1\">\n      {legend && (\n        <span\n          className={`mb-1 block text-xs leading-none font-medium ${colorSet.legend}`}\n        >\n          {legend}\n        </span>\n      )}\n      <div className=\"relative flex w-40 overflow-hidden rounded-sm\">\n        {/* Option spans - these are the clickable areas */}\n        <span\n          onClick={toggleYes}\n          className={`border-input relative z-10 min-w-20 cursor-pointer rounded-l-sm border py-1 text-center text-xs font-semibold`}\n        >\n          <span\n            className={`relative z-10 ${isChecked ? \"opacity-0\" : \"text-gray-300\"} transition-opacity duration-300`}\n          >\n            {checkedValue}\n          </span>\n        </span>\n\n        <span\n          onClick={toggleNo}\n          className={`border-input relative z-10 min-w-20 cursor-pointer rounded-r-sm border border-l-0 py-1 text-center text-xs font-semibold`}\n        >\n          <span\n            className={`relative z-10 ${!isChecked ? \"opacity-0\" : \"text-gray-300\"} transition-opacity duration-300`}\n          >\n            {notCheckedValue}\n          </span>\n        </span>\n\n        {/* Animated marker - this slides and shows the active text */}\n        <div\n          className={`bg-primary absolute top-0 z-30 h-full min-w-20 transition-all duration-500 ease-out ${isChecked ? \"left-0 rounded-l-sm\" : \"left-20 rounded-r-sm\"} `}\n        >\n          <span className=\"absolute z-40 flex h-full w-full items-center justify-center text-xs font-semibold text-white\">\n            {isChecked ? checkedValue : notCheckedValue}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","\"use client\";\n\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\";\n\nimport { cn } from \"../../lib/utils\";\nimport { Label } from \"../../components/ui/label\";\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState } = useFormContext();\n  const formState = useFormState({ name: fieldContext.name });\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\");\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n);\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  );\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message ?? \"\") : props.children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n};\n","import * as React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { Combobox, ComboboxProps } from \"../ui/combobox\";\nimport {\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n} from \"../ui/form\";\n\nexport interface DropdownFormProps\n  extends Omit<ComboboxProps, \"value\" | \"onChange\"> {\n  name: string;\n  label?: string;\n  description?: React.ReactNode;\n}\n\n/**\n * DropdownForm: Combobox integrated with react-hook-form and form fieldset components.\n * Handles value and onChange via react-hook-form Controller.\n */\nexport const DropdownForm: React.FC<DropdownFormProps> = ({\n  name,\n  label,\n  description,\n  ...comboboxProps\n}) => {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState }) => (\n        <FormItem>\n          {label && <FormLabel>{label}</FormLabel>}\n          <FormControl>\n            <Combobox\n              {...comboboxProps}\n              value={field.value}\n              onChange={field.onChange}\n            />\n          </FormControl>\n          {description && <FormDescription>{description}</FormDescription>}\n          <FormMessage>{fieldState.error?.message}</FormMessage>\n        </FormItem>\n      )}\n    />\n  );\n};\n","\"use client\";\nimport * as React from \"react\";\nimport { useFormContext, Controller } from \"react-hook-form\";\nimport { FormItem, FormControl, FormMessage } from \"../ui/form\";\nimport { Input, InputProps } from \"../ui/input\";\n\nexport interface UpgradedFieldsetFormInputProps\n  extends Omit<InputProps, \"name\" | \"variant\"> {\n  name: string;\n  legend?: string;\n  placeholder?: string;\n  type?: string;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n}\n\nexport function UpgradedFieldsetFormInput({\n  name,\n  legend,\n  placeholder,\n  type,\n  fieldsetColorVariant = \"default\",\n  ...props\n}: UpgradedFieldsetFormInputProps) {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field }) => (\n        <FormItem>\n          <FormControl>\n            <Input\n              {...field}\n              variant=\"fieldset\"\n              legend={legend}\n              placeholder={placeholder}\n              type={type}\n              fieldsetColorVariant={fieldsetColorVariant}\n              {...props}\n            />\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","\"use client\";\nimport * as React from \"react\";\nimport { useFormContext, Controller } from \"react-hook-form\";\nimport { FormItem, FormControl, FormMessage } from \"../ui/form\";\nimport { Textarea, TextareaProps } from \"../ui/textarea\";\n\nexport interface UpgradedFieldsetFormTextareaProps\n  extends Omit<TextareaProps, \"name\" | \"variant\"> {\n  name: string;\n  legend?: string;\n  placeholder?: string;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n}\n\nexport function UpgradedFieldsetFormTextarea({\n  name,\n  legend,\n  placeholder,\n  fieldsetColorVariant = \"default\",\n  ...props\n}: UpgradedFieldsetFormTextareaProps) {\n  const { control } = useFormContext();\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field }) => (\n        <FormItem>\n          <FormControl>\n            <Textarea\n              {...field}\n              variant=\"fieldset\"\n              legend={legend}\n              placeholder={placeholder}\n              fieldsetColorVariant={fieldsetColorVariant}\n              {...props}\n            />\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","\"use client\";\nimport * as React from \"react\";\nimport { useFormContext, Controller } from \"react-hook-form\";\nimport { FormItem, FormControl, FormMessage } from \"../ui/form\";\nimport { Toggle, ToggleProps } from \"../ui/toggle\";\n\nexport interface ToggleFormProps\n  extends Omit<ToggleProps, \"name\" | \"checked\" | \"onChange\"> {\n  name: string;\n  legend?: string;\n  fieldsetColorVariant?:\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\";\n}\n\nexport function ToggleForm({\n  name,\n  legend,\n  fieldsetColorVariant = \"default\",\n  checkedValue,\n  notCheckedValue,\n  ...props\n}: ToggleFormProps) {\n  const { control } = useFormContext();\n  const finalCheckedValue = checkedValue ?? \"YES\";\n  const finalNotCheckedValue = notCheckedValue ?? \"NO\";\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field }) => (\n        <FormItem>\n          <FormControl>\n            <Toggle\n              {...props}\n              name={name}\n              checked={!!field.value}\n              onChange={(e) => field.onChange(e.target.value)}\n              legend={legend}\n              fieldsetColorVariant={fieldsetColorVariant}\n              checkedValue={finalCheckedValue}\n              notCheckedValue={finalNotCheckedValue}\n            />\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","\n\"use client\";\n\nimport * as React from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n","\n\"use client\";\nimport * as React from \"react\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\nimport { Button } from \"./button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"./dropdown-menu\";\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme();\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>\n          Light\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>\n          Dark\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>\n          System\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\n\nimport { cn } from \"../../lib/utils\";\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />;\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  );\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  );\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />;\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n};\n","\"use client\";\nimport { HTMLAttributes } from \"react\";\nimport \"./modal.scss\";\nimport { cn } from \"../../../lib/utils\";\n\nexport type ModalSize = \"small\" | \"medium\" | \"medium2\" | \"large\" | \"xlarge\";\n\nexport interface ModalProps extends HTMLAttributes<HTMLDialogElement> {\n  header?: string;\n  show?: boolean;\n  children?: React.ReactNode;\n  size?: ModalSize;\n}\n\nconst Modal = ({\n  header = \"Header\",\n  children,\n  show = false,\n  size = \"medium\",\n  ...rest\n}: ModalProps) => {\n  const modalSize: any = { \"modal-size\": size };\n\n  return (\n    <>\n      {show ? (\n        <div className={cn(\"modal-background\", \"h-full\")} role=\"modal-bg\">\n          <div\n            className={cn(\"modal-container\", \"bg-background\")}\n            {...rest}\n            //open={show}\n            {...modalSize}\n          >\n            {/* Header Container */}\n            <div\n              className={cn(\"modal-header-container\", \"border border-blue-800\")}\n            >\n              <span\n                className={cn(\n                  \"modal-header\",\n                  \"text-foreground border border-red-700 underline underline-offset-8\"\n                )}\n              >\n                {header}\n              </span>\n            </div>\n            {/* Content */}\n            <div className={cn(\"content-container\")}>{children}</div>\n            {/* Footer Container */}\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","names":["React","import_lucide_react","import_lucide_react","import_jsx_runtime","import_jsx_runtime","CommandPrimitive","CommandPrimitive","CommandPrimitive","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","React","import_class_variance_authority","import_jsx_runtime","moment","import_jsx_runtime","React","import_class_variance_authority","import_jsx_runtime","fieldsetColorVariants","import_react","import_jsx_runtime","React","import_jsx_runtime","import_react_hook_form","import_jsx_runtime","import_react_hook_form","import_jsx_runtime","import_react_hook_form","import_jsx_runtime","import_react_hook_form","import_jsx_runtime","import_jsx_runtime","NextThemesProvider","import_lucide_react","import_next_themes","import_lucide_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime"]}